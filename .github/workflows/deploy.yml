name: Build, push, and deploy Docker image to the server

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  DOCKER_IMAGE_PRODUCTION_TAG: production

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: üîç Debug GH_TOKEN
        run: |
          echo "GH_TOKEN length: ${#GH_TOKEN}"
          if [ -z "${GH_TOKEN}" ]; then
            echo "‚ùå GH_TOKEN is empty"
            exit 1
          else
            echo "‚úÖ GH_TOKEN is set"
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: üßë‚Äçüíª Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: ‚¨ÜÔ∏è Extract metadata for final image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-final
          tags: ${{ env.DOCKER_IMAGE_PRODUCTION_TAG }}

      - name: üê≥ Build and push final image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          target: final # <--- IMPORTANT : correspond au stage de ton Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  copy-docker-compose:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: üîë Decode SSH key and configure
        run: |
          mkdir -p ~/.ssh
          rm -f ~/.ssh/id_rsa
          echo "${{ secrets.SSH_COVOITURAGEECORIDE2_B64 }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: üîë Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} 'echo "‚úÖ Connection OK"'
        
      - name: üìë Copy docker-compose.yml to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_COVOITURAGEECORIDE2 }}
          source: ./docker-compose.yml
          target: ~/

  deploy:
    runs-on: ubuntu-latest
    needs: copy-docker-compose
    steps:
      - name: üîë Decode SSH key and configure
        run: |
          mkdir -p ~/.ssh
          rm -f ~/.ssh/id_rsa
          echo "${{ secrets.SSH_COVOITURAGEECORIDE2_B64 }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: üöÄ Deploy image to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_COVOITURAGEECORIDE2 }}
          script: |
            cd
            docker pull ghcr.io/${{ github.repository }}-final:${{ env.DOCKER_IMAGE_PRODUCTION_TAG }}
            docker compose up -d
            docker image prune -f
