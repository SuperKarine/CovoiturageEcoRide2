name: Build, push, and deploy Docker image to the server

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  DOCKER_IMAGE_PRODUCTION_TAG: production

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 🧑‍💻 Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: ⬆️ Extract metadata for final image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-final
          tags: ${{ env.DOCKER_IMAGE_PRODUCTION_TAG }}

      - name: 🐳 Build and push final image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          target: final
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  copy-docker-compose:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 📑 Copy docker-compose.yml to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_COVOITURAGEECORIDE2 }}
          source: docker-compose.yml
          target: ~/
          strip_components: 1

      - name: 🔄 Check and handle reboot if needed
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_COVOITURAGEECORIDE2 }}
          script: |
            if [ -f /var/run/reboot-required ]; then
              echo "🔄 Reboot required, rebooting server..."
              sudo reboot
            else
              echo "✅ No reboot required"
            fi

  deploy:
    runs-on: ubuntu-latest
    needs: copy-docker-compose
    steps:
      - name: ⏳ Wait for server reboot if needed
        run: sleep 120

      - name: 🚀 Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_COVOITURAGEECORIDE2 }}
          script: |
            echo "🐳 Pulling latest Docker image..."
            docker pull ghcr.io/${{ github.repository }}-final:production
            echo "🛑 Stopping existing containers..."
            docker compose down
            echo "🚀 Starting new containers..."
            docker compose up -d
            echo "🧹 Cleaning up unused images..."
            docker image prune -f
            echo "📦 Checking running containers:"
            docker ps
            echo "✅ Deployment completed successfully!"