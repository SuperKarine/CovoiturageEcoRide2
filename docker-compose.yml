services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - web

  server:
    image: ghcr.io/SuperKarine/projetbook-final:production
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`app.localhost`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=80"

  db:
    image: mongo
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    expose:
      - "27017"
    volumes:
      - db-data:/data/db  
    networks:
      - web

  mongo-express:
    image: mongo-express
    restart: always
    env_file:
      - .env
    environment:
      ME_CONFIG_MONGODB_SERVER: db
      MONGO_INITDB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mongoex.rule=Host(`mongo.localhost`)"
      - "traefik.http.routers.mongoex.entrypoints=web"
      - "traefik.http.services.mongoex.loadbalancer.server.port=8081"
    networks:
      - web

volumes:
  db-data:

networks:
  web:
    external: false
